import Head from 'next/head';
import { useState } from 'react';
import styles from '../styles/Home.module.css'
import { ConnectResult } from './proto/connection';


function Home(): JSX.Element {
  const [userid, setID] = useState<string | null>(null);
  const [status, setStatus] = useState<string | null>(null);
  const [text, setText] = useState<string | null>("");

  /* 
   * These ones were pretty straight forward to develop.
   * One thing to note is we'd want to try and server-side
   * render the page for Table Reads, since JSON is a lot
   * slower than Protobuf.
   */
  const handleConnect = async () => {
    const response = await fetch('/api/connect');
    if (!response.ok) {
      setStatus("Error: " + response.statusText);
    } else {
      const data: ConnectResult = await response.json();
      setID(data.id);
      setStatus(null);
    }
  };

  const handleDisconnect = async () => {
    const response = await fetch('/api/disconnect', {
      method: 'POST',
      body: JSON.stringify({ id: userid }),
    });
    setID(null);
    if (!response.ok) {
      setStatus("Error: " + response.statusText);
    } else {
      setStatus("Client has disconnected");
    }
  };

  // Take a string and call api/query with it.
  const handleQuery = async () => {
    const response = await fetch('/api/query', {
      method: 'POST',
      body: JSON.stringify({ query: text }),
    });
    if (!response.ok) {
      setStatus("Error: " + response.statusText);
    } else {
      const data: ConnectResult = await response.json();
      setStatus(JSON.stringify(data));
    }
  };

  const handleTextChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {
    setText(event.target.value);
  };

  var title = "Welcome to GQL Database";
  if (userid) {
    title = "Connected with: " + userid;
  } else if (status) {
    title = status;
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content={"Generated by create next app"} />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <a>{title}</a>
        </h1>

        <div className={styles.grid}>
          <a className={styles.card} onClick={handleConnect}>
            <h2>ConnectDB &rarr;</h2>
            <p>Connect to the Database</p>
          </a>

          <a className={styles.card} onClick={handleDisconnect}>
            <h2>DisconnectDB &rarr;</h2>
            <p>Disconnect from Database</p>
          </a>
        </div>
        <div className={styles.grid}>
          <textarea onChange={handleTextChange} />
          <a className={styles.card} onClick={handleQuery}>
            <h2>QueryDB &rarr;</h2>
            <p>Query the Database</p>
          </a>
        </div>
      </main >
    </div >
  )
}

export default Home