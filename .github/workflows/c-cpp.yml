name: Qt Unit Tests

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
  
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: (1) Checkout repo
      uses: actions/checkout@v3
    
    - name: (2) Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version:      ${{ env.QT_VERSION }}
        host:         windows
        target:       desktop
        arch:         win64_msvc2019_64
        dir:          ${{ runner.temp }}
        setup-python: false
        
    - name: (3) List Qt Modules
      run: aqt list-qt windows desktop --modules 5.15.2 win64_msvc2019_64
    
    - name: (4) Download JOM
      uses: suisei-cn/actions-download-file@v1
      with:
        url:    http://download.qt.io/official_releases/jom/jom.zip
        target: ${{ runner.temp }}\

    - name: (5) Unzip JOM
      working-directory: ${{ runner.temp }}
      run:  |
            7z x jom.zip -ojom
              
    - name: (6) Create build directory
      run:  mkdir ${{ runner.temp }}\build

    - name: (7) Set up Visual Studio shell
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64
        
    - name: (8) Build Using QMake
      working-directory: ${{ runner.temp }}\build
      run:  |
            qmake -r ${{ env.SOURCE_DIR }}\gql_client.pro
            ${{ runner.temp }}\jom\jom -j2
        
    - name: (9) Copy Necessary dlls
      working-directory: ${{ runner.temp }}
      run:  |
            copy "${{ runner.temp }}\build\src\release\src.dll" "${{ runner.temp }}\build/tests/release/src.dll"
            ls ${{ runner.temp }}\build\tests\release
        
    - name: (10) Run Tests
      working-directory: ${{ runner.temp }}\build\tests\release
      run:  |
            echo && ${{ runner.temp }}\build\tests\release\tests.exe
      
